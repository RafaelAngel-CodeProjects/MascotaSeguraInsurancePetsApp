/**
 * Plataforma Canales Masivos - API Plan Mascotas - Corresponsales
 * Servicios disponibles para el API de Plan Mascotas
 *
 * OpenAPI spec version: 1.0.1
 * Contact: ticanales@suramericana.com.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface ContenidoExpedicion { 
    /**
     * Tipo de documento Tomador/Asegurado, revisar listado en el catálogo.
     */
    tipoDocumentoAsegurado: ContenidoExpedicion.TipoDocumentoAseguradoEnum;
    /**
     * Número de documento Tomador/Asegurado.
     */
    numeroDocumentoAsegurado: string;
    /**
     * Primer Nombre Tomador/Asegurado.
     */
    primerNombreAsegurado: string;
    /**
     * Primer Apellido Tomador/Asegurado.
     */
    primerApellidoAsegurado: string;
    /**
     * Fecha Nacimiento Tomador/Asegurado.
     */
    fechaNacimientoAsegurado: string;
    /**
     * Genero Tomador/Asegurado, revisar listado en el catálogo.
     */
    genero: ContenidoExpedicion.GeneroEnum;
    /**
     * Fecha Inicio de Vigencia.
     */
    fechaInicioVigencia: string;
    /**
     * Forma de pago, revisar listado en el catálogo.
     */
    formaPago: ContenidoExpedicion.FormaPagoEnum;
    /**
     * Medio de pago, revisar listado en el catálogo.
     */
    medioPago: ContenidoExpedicion.MedioPagoEnum;
    /**
     * Nombre del Banco, revisar listado en el catálogo, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    banco?: string;
    /**
     * Tipo de cuenta, revisar listado en el catálogo, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    tipoCuenta?: ContenidoExpedicion.TipoCuentaEnum;
    /**
     * Numero de cuenta, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    numeroCuenta?: string;
    /**
     * Confirma el número de cuenta, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    numeroCuentaConfirmacion?: string;
    /**
     * Tipo documento del cuentahabiente, revisar listado en el catálogo, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    tipoDocumentoCuentahabiente?: ContenidoExpedicion.TipoDocumentoCuentahabienteEnum;
    /**
     * Número documento del cuentahabiente,sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    numeroDocumentoCuentahabiente?: string;
    /**
     * Primer nombre del cuentahabiente, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    primerNombreCuentahabiente?: string;
    /**
     * Segundo nombre del cuentahabiente, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    segundoNombreCuentahabiente?: string;
    /**
     * Primer apellido del cuentahabiente, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    primerApellidoCuentahabiente?: string;
    /**
     * Segundo apellido del cuentahabiente, sólo se requiere cuando en la forma de pago sea cobro bancario.
     */
    segundoApellidoCuentahabiente?: string;
    /**
     * Nombre de la mascota.
     */
    nombreMascota: string;
    /**
     * Tipo de mascota.
     */
    tipoMascota: ContenidoExpedicion.TipoMascotaEnum;
    /**
     * Raza de la mascota en caso de que sea un perro, revisar listado en el catálogo.
     */
    razaPerro?: string;
    /**
     * Raza de la mascota en caso de que sea un gato, revisar listado en el catálogo.
     */
    razaGato?: string;
    /**
     * Género de la mascota.
     */
    generoMascota: ContenidoExpedicion.GeneroMascotaEnum;
    /**
     * Fecha de nacimiento de la mascota.
     */
    fechaNacimientoMascota: string;
    /**
     * Código del vendedor.
     */
    codigoVendedor: string;
    /**
     * Confirmación del código del vendedor.
     */
    codigoVendedorConfirmacion?: string;
    /**
     * Ciudad de Residencia del Tomador/Asegurado, revisar listado en el catálogo.
     */
    ciudadAsegurado: string;
    /**
     * Direccion del Tomador/Asegurado.
     */
    direccionAsegurado: string;
    /**
     * Correo electronico del Tomador/Asegurado.
     */
    correoAsegurado: string;
    /**
     * Teléfono del Tomador/Asegurado.
     */
    telefonoAsegurado?: string;
    /**
     * Celular del Tomador/Asegurado.
     */
    celularAsegurado: string;
    /**
     * Autoriza el tratamiento de Datos.
     */
    autorizaTratamientoDatos: ContenidoExpedicion.AutorizaTratamientoDatosEnum;
    /**
     * Autoriza el envío de mensajes de texto.
     */
    autorizaEnvioSMS: ContenidoExpedicion.AutorizaEnvioSMSEnum;
    /**
     * Autoriza el envío de correos electrónicos.
     */
    autorizaEnvioCorreo: ContenidoExpedicion.AutorizaEnvioCorreoEnum;

    plan:string;    
}
export namespace ContenidoExpedicion {
    export type TipoDocumentoAseguradoEnum = 'CEDULA' | 'NIT' | '';
    export const TipoDocumentoAseguradoEnum = {
        CEDULA: 'CEDULA' as TipoDocumentoAseguradoEnum,
        NIT: 'NIT' as TipoDocumentoAseguradoEnum,
        Empty: '' as TipoDocumentoAseguradoEnum
    };
    export type GeneroEnum = 'Femenino' | 'Masculino';
    export const GeneroEnum = {
        Femenino: 'Femenino' as GeneroEnum,
        Masculino: 'Masculino' as GeneroEnum
    };
    export type FormaPagoEnum = 'Semestral' | 'Anual' | 'Mensual';
    export const FormaPagoEnum = {
        Semestral: 'Semestral' as FormaPagoEnum,
        Anual: 'Anual' as FormaPagoEnum,
        Mensual: 'Mensual' as FormaPagoEnum
    };
    export type MedioPagoEnum = 'Efectivo' | 'Débito Automático';
    export const MedioPagoEnum = {
        Efectivo: 'Efectivo' as MedioPagoEnum,
        DbitoAutomtico: 'Débito Automático' as MedioPagoEnum
    };
    export type TipoCuentaEnum = 'Corriente' | 'Ahorros' | '';
    export const TipoCuentaEnum = {
        Corriente: 'Corriente' as TipoCuentaEnum,
        Ahorros: 'Ahorros' as TipoCuentaEnum,
        Empty: '' as TipoCuentaEnum
    };
    export type TipoDocumentoCuentahabienteEnum = 'CEDULA' | 'NIT' | '';
    export const TipoDocumentoCuentahabienteEnum = {
        CEDULA: 'CEDULA' as TipoDocumentoCuentahabienteEnum,
        NIT: 'NIT' as TipoDocumentoCuentahabienteEnum,
        Empty: '' as TipoDocumentoCuentahabienteEnum
    };
    export type TipoMascotaEnum = 'Gato' | 'Perro';
    export const TipoMascotaEnum = {
        Gato: 'Gato' as TipoMascotaEnum,
        Perro: 'Perro' as TipoMascotaEnum
    };
    export type GeneroMascotaEnum = 'Hembra' | 'Macho' | '';
    export const GeneroMascotaEnum = {
        Hembra: 'Hembra' as GeneroMascotaEnum,
        Macho: 'Macho' as GeneroMascotaEnum,
        Empty: '' as GeneroMascotaEnum
    };
    export type AutorizaTratamientoDatosEnum = 'Si' | 'No';
    export const AutorizaTratamientoDatosEnum = {
        Si: 'Si' as AutorizaTratamientoDatosEnum,
        No: 'No' as AutorizaTratamientoDatosEnum
    };
    export type AutorizaEnvioSMSEnum = 'Si' | 'No';
    export const AutorizaEnvioSMSEnum = {
        Si: 'Si' as AutorizaEnvioSMSEnum,
        No: 'No' as AutorizaEnvioSMSEnum
    };
    export type AutorizaEnvioCorreoEnum = 'Si' | 'No';
    export const AutorizaEnvioCorreoEnum = {
        Si: 'Si' as AutorizaEnvioCorreoEnum,
        No: 'No' as AutorizaEnvioCorreoEnum
    };
}